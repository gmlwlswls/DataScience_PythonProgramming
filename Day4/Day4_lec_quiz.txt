from abc import ABC, abstractmethod

class Shape(ABC) :
  @abstractmethod
  def area(self) :
    pass
  
  @abstractmethod
  def perimeter(self) :
    pass

class Rectangle(Shape) :
  def __init(self, width, height) :
    self.width = width
    self.height = height
  
  def area(self) :
    return self.width * self.height
  
  def perimeter(self) :
    return 2 * (self.width + self.height)

> Abstraction에 대한 설명

: Shape이라는 추상적인 클래스(구체적인 클래스 : 사각형, 삼각형, ,,)
: 도형들이 공통적으로 가지는 속성, 메서드를 묶어서 쉽게 보여주기 위한 클래스
: 실제 object로 만들어서 사용하고자 하는 목적이 아니라
: 하위클래스들이 공통적으로 이러한 특징(area, perimeter)을 가진다는 것을 알려주기 위한 목적
: 하위클래스는 이러한 특징을 구체적으로 구현